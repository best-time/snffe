@charset 'utf-8';

// 各个浏览器的属性前缀，true表示开启，false表示不开启
//-----------------------------------------------------
$prefixForWebkit:             true !default;
$prefixForMozilla:            true !default;
$prefixForMicrosoft:          true !default;
$prefixForOpera:              false !default; //opera从版本15开始转向webkit，所以默认为false，不输出o前缀
$prefixNo:                    true !default;

// 属性加前缀
@mixin prefixer($property, $value, $prefixes: o webkit) {
  @each $prefix in $prefixes {
    @if $prefix == webkit and $prefixForWebkit == true {
      -webkit-#{$property}: $value;
    }
    @else if $prefix == moz and $prefixForMozilla == true {
      -moz-#{$property}: $value;
    }
    @else if $prefix == ms and $prefixForMicrosoft == true {
      -ms-#{$property}: $value;
    }
    @else if $prefix == o and $prefixForOpera == true {
      -o-#{$property}: $value;
    }
  }
  @if $prefixNo {
    #{$property}: $value;
  }
}

//属性值加前缀
@mixin prefixer-value($property, $value, $prefixes: webkit moz) {
  @each $prefix in $prefixes {
    @if $prefix == webkit and $prefixForWebkit == true {
      #{$property}: -webkit-#{$value};
    }
    @else if $prefix == moz and $prefixForMozilla == true {
      #{$property}: -moz-#{$value};
    }
    @else if $prefix == o and $prefixForMozilla == true {
      #{$property}: -o-#{$value};
    }
    @else if $prefix == ms and $prefixForMicrosoft == true {
      #{$property}: -ms-#{$value};
    }
  }
  @if $prefixNo {
    #{$property}: $value;
  }
}


@mixin box-shadow ($boxShadow...) {
    -webkit-box-shadow: $boxShadow;
    box-shadow: $boxShadow
}

@mixin animation($animation...) {
    -webkit-animation: $animation;
    animation: $animation;
}

@mixin transition($transition...) {
    -webkit-transition: $transition;
    transition: $transition;
}

@mixin transform($content...) {
    -webkit-transform: $content;
    transform: $content;
}
// translate
@mixin translate3d($x: 0, $y: 0, $z: 0) {
    -webkit-transform: translate3d($x,$y, $z);
    transform: translate3d($x,$y, $z);
}
@mixin translate($x: 0, $y: 0, $z: 0) {
    // -webkit-transform: translate($x,$y,$z);
    // transform: translate($x,$y,$z);
    -webkit-transform: translate($x,$y) translateZ($z);
    transform: translate($x,$y) translateZ($z);
}
@mixin translateX($num:0px) {
    -webkit-transform: translateX($num);
    transform: translateX($num);
}
@mixin translateY($num:0px) {
    -webkit-transform: translateY($num);
    transform: translateY($num);
}
@mixin translateZ($num:0px) {
    -webkit-transform: translateZ($num);
    transform: translateZ($num);
}

// scale
@mixin scale($x:1, $y:1, $z:1) {
    -webkit-transform:scale($x,$y,$z);
    transform:scale($x,$y,$z);
}
@mixin scaleX($num: 1) {
    -webkit-transform:scaleX($num);
    transform:scaleX($num);
}
@mixin scaleY($num: 1) {
    -webkit-transform:scaleY($num);
    transform:scaleY($num);
}
@mixin scaleZ($num: 1) {
    -webkit-transform:scaleZ($num);
    transform:scaleZ($num);
}

//rotate
@mixin rotateX($num: 0deg) {
    -webkit-transform:rotateX($num);
    transform:rotateX($num);
}
@mixin rotateY($num: 0deg) {
    -webkit-transform:rotateY($num);
    transform:rotateY($num);
}
@mixin rotateZ($num: 0deg) {
    -webkit-transform:rotateZ($num);
    transform:rotateZ($num);
}


// triangle
@mixin triangle($direction, $size, $borderColor ) {
    content:"";
    height: 0;
    width: 0;

    @if $direction == top {
        border-bottom:$size solid $borderColor;
        border-left:$size dashed transparent;
        border-right:$size dashed transparent;
    }
    @else if $direction == right {
        border-left:$size solid $borderColor;
        border-top:$size dashed transparent;
        border-bottom:$size dashed transparent;
    }
    @else if $direction == bottom {
        border-top:$size solid $borderColor;
        border-left:$size dashed transparent;
        border-right:$size dashed transparent;
    }
    @else if $direction == left {
        border-right:$size solid $borderColor;
        border-top:$size dashed transparent;
        border-bottom:$size dashed transparent;
    }
}


// screen

@mixin screen($resMin, $resMax)
{
  @media screen and (min-width: $resMin) and (max-width: $resMax)
  {
    @content;
  }
}

@mixin max-screen($res)
{
  @media screen and (max-width: $res)
  {
    @content;
  }
}

@mixin min-screen($res)
{
  @media screen and (min-width: $res)
  {
    @content;
  }
}

@mixin screen-height($resMin, $resMax)
{
  @media screen and (min-height: $resMin) and (max-height: $resMax)
  {
    @content;
  }
}

@mixin max-screen-height($res)
{
  @media screen and (max-height: $res)
  {
    @content;
  }
}

@mixin min-screen-height($res)
{
  @media screen and (min-height: $res)
  {
    @content;
  }
}



@mixin center-block ($extend:true) {
  @if $extend {
    @extend %center-block;
  } @else {
    margin-left: auto;
    margin-right: auto;
  }
}
%center-block{
  @include center-block(false);
}

@mixin line-height($height: 40px, $line-height: false) {
    height: $height;
    @if $line-height {
        line-height: $line-height;
    } @else {
        line-height: $height;
    }
    
}


//flex

@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin flex($values) {
  -webkit-box-flex: $values;
  -moz-box-flex:  $values;
  -webkit-flex:  $values;
  -ms-flex:  $values;
  flex:  $values;
}

@mixin order($val) {
  -webkit-box-ordinal-group: $val;  
  -moz-box-ordinal-group: $val;     
  -ms-flex-order: $val;     
  -webkit-order: $val;  
  order: $val;
}

.wrapper {
  @include flexbox();
}

.item {
  @include flex(1 200px);
  @include order(2);
}


// no-touch
@mixin no-touch{
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
}

@mixin position($top: 1px, $right: 0px, $bottom: 0px, $left: 0px) {
    @if $top {
        top: $top;
    }
    @if $right {
        right: $right;
    }
    @if $bottom {
        bottom: $bottom;
    }
    @if $left {
        left: $left;
    }
}